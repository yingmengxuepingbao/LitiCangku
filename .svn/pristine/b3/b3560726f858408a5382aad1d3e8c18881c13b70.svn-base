<div class="jumbotron">
<!--    <h1>欢迎使用宝佳集团WMS系统！</h1>-->
    <div class="row">
        <div class="col-lg-6">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">仓库利用率</h3>
                </div>
                <div class="panel-body">
                    <span id="locStatistic">loading</span>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="panel panel-warning">
                <div class="panel-heading">
                    <h3 class="panel-title">库存最久商品</h3>
                </div>
                <div class="panel-body">
                    <span id="longGoodsInfo">loading</span>
                </div>
            </div>
        </div>
<!--        <div class="col-lg-4">
            <div class="panel panel-success">
                <div class="panel-heading">
                    <h3 class="panel-title">库存最多商品</h3>
                </div>
                <div class="panel-body">
                    <span id="stereoscopicPalletCount">loading</span>
                </div>
            </div>
        </div>-->
<!--        <div class="col-lg-3">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title">出库暂存区</h3>
                </div>
                <div class="panel-body">
                    <span id="outTemporaryGoodsCount">loading</span>
                </div>
            </div>
        </div>-->
    </div>

    <div class="row" style="height:80%;">
        <div class="col-lg-12" id="chartA" style="height:100%;">
            loading
        </div>
    </div>
<!--    <div class="row" style="height:50%;">
        <div class="col-lg-12" id="chartB" style="height:100%;">
            入库暂存区的货物统计
        </div>
    </div>-->

</div>
<script>
    console.log("main");
    // 加载面板统计数据
    $.ajax({
        type	:"get",
        url		: $.mpbGetHeaderPath()+ "/main/storage/statistic/count",
        //预期返回的数据
        dataType:"json",
        headers:{'token':localStorage.getItem('token')},
        success	: function (data) {
            let isUsedLocCount = data.isUsedLocCount;
            let notUsedLocCount = data.notUsedLocCount;
            let totalLocCount = isUsedLocCount + notUsedLocCount;
            let useRate = Math.floor(isUsedLocCount/(isUsedLocCount+notUsedLocCount)*100);
            $("#locStatistic").html(useRate+"%  (已用:"+isUsedLocCount+",可用:"+notUsedLocCount+",总计:"+totalLocCount+")");

            if (data.longGoodsInfo){
                let goodsInfo = data.longGoodsInfo;
                let text = '';
                for (let i=0,len=goodsInfo.length; i<len; i++){
                    text = text + goodsInfo[i].goodsName+"("+goodsInfo[i].number+"拖,"+goodsInfo[0].batchNo+");  ";
                    if(i%2!=0){
                        text = text +'<br/>';
                    }
                }
                $("#longGoodsInfo").html(text);
            }
        },
        error	: function (err) {
            console.error(err);
        }
    });
    $.ajax({
        type	:"get",
       // url		: $.mpbGetHeaderPath()+ "/main/storage/lately",
        url		: $.mpbGetHeaderPath()+ "/main/storage/getChuRuSendData",
        //预期返回的数据
        dataType:"json",
        headers:{'token':localStorage.getItem('token')},
        success	: function (data) {
            console.log(data);
            var xAxisData = data.sendData.name;
            var receiveSeriesData = data.sendData.inValue;
            var sendSeriesData = data.sendData.outValue;
            renderLineChart(xAxisData,sendSeriesData,receiveSeriesData);
        },
        error	: function (err) {
            console.error(err);
        }
    });
    // 渲染折线图
    function renderLineChart(xAxisData,sendSeriesData,receiveSeriesData) {
        var dom = document.getElementById("chartA");
        var myChart = echarts.init(dom);
        var app = {};
        option = {
            title: {
                text: '出入库图标',
                subtext: '最近一周'
            },
            tooltip: {
                trigger: 'axis'
            },
            legend: {
                //可以增加
                data: ['入库量','出库量']
            },
            toolbox: {
                show: true,
                feature: {
                    //区域缩放
                    // dataZoom: {
                    //     yAxisIndex: 'none'
                    // },
                    // dataView: {readOnly: true},
                    magicType: {type: ['line', 'bar']},
                    // restore: {},
                    // saveAsImage: {}
                }
            },
            xAxis: {
                type: 'category',
                boundaryGap: false,
                data: xAxisData
            },
            yAxis: {
                type: 'value',
                axisLabel: {
                    formatter: '{value} 托'
                }
            },
            series: [
                {
                    name: '入库量',
                    type: 'line',
                    data: receiveSeriesData,
                    markPoint: {
                        data: [
                            {type: 'max', name: '最大值'},
                            {type: 'min', name: '最小值'}
                        ]
                    },
                    markLine: {
                        data: [
                            {type: 'average', name: '平均值'}
                        ]
                    }
                },
                {
                    name: '出库量',
                    type: 'line',
                    data: sendSeriesData,
                    markPoint: {
                        data: [
                            {type: 'max', name: '最大值'},
                            {type: 'min', name: '最小值'}
                        ]
                    },
                    markLine: {
                        data: [
                            {type: 'average', name: '平均值'}
                        ]
                    }
                }
            ]
        };

        if (option && typeof option === "object") {
            myChart.setOption(option, true);
        }
    }

    function renderChartB(){
        var dom = document.getElementById("chartB");
        var myChart = echarts.init(dom);
        option = {
            legend: {},
            tooltip: {},
            dataset: {
                source: [
                    ['product', '2015', '2016', '2017'],
                    ['Matcha Latte', 43.3, 85.8, 93.7],
                    ['Milk Tea', 83.1, 73.4, 55.1],
                    ['Cheese Cocoa', 86.4, 65.2, 82.5],
                    ['Walnut Brownie', 72.4, 53.9, 39.1]
                ]
            },
            xAxis: {type: 'category'},
            yAxis: {},
            // Declare several bar series, each will be mapped
            // to a column of dataset.source by default.
            series: [
                {type: 'bar'},
                {type: 'bar'},
                {type: 'bar'}
            ]
        };
        if (option && typeof option === "object") {
            myChart.setOption(option, true);
        }
    }

    // renderChartB();

</script>